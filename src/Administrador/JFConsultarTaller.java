/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Administrador;

import Clases.ConsultarTalleres; // Importa la clase ConsultarTalleres
import Clases.TextPrompt; // Importa la clase TextPrompt para utilizar placeholders
import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color; // Permite usar la clase Color para cambiar colores en componentes gráficos.
import java.awt.Image; // Permite manejar imágenes, por ejemplo, para íconos o imágenes en la interfaz.
import java.awt.Toolkit; // Proporciona acceso a recursos del sistema como imágenes, sonidos, etc.
import java.awt.event.KeyEvent; // Permite detectar y manejar eventos del teclado, como presionar, soltar o escribir una tecla.
import java.io.FileOutputStream;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane; // Permite mostrar cuadros de diálogo (mensajes, confirmaciones, entradas de texto, etc.).
import javax.swing.table.DefaultTableModel; // Permite trabajar con la tabla

/**
 *
 * @author canto
 */
public class JFConsultarTaller extends javax.swing.JFrame {

    /**
     * Creates new form JFConsultarGrupo
     */
    public JFConsultarTaller() {
        initComponents();
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); // Desactiva la X de cierre
        TextPrompt taller = new TextPrompt("Inglés",jTextNombre); // Establece textos de sugerencia ("placeholders")      
        setIconImage(getIconImage()); // Establece un ícono personalizado para la ventana.
    }
    //Icono del JFrame
    @Override // Indica que este método sobrescribe el método getIconImage() de la clase JFrame
    // Usa Toolkit (una clase de utilidades gráficas de AWT) para obtener una imagen ubicada en la ruta interna del proyecto
    // ClassLoader.getSystemResource() localiza el archivo dentro del classpath (dentro de src o el .jar).
    public Image getIconImage(){ 
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("workshopadmin/Imagenes/LogoIcono.png"));
        return retValue; // Devuelve la imagen para que sea usada como ícono del JFrame
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButtonConsultar = new javax.swing.JButton();
        jTextNombre = new javax.swing.JTextField();
        jButtonHorario = new javax.swing.JButton();
        jButtonGenerarListas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTalleresGrupos = new javax.swing.JTable();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonRegresar = new javax.swing.JButton();
        jButtonRegresarInicio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelnformacion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consulta de talleres");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Nombre");

        jButtonConsultar.setBackground(java.awt.Color.lightGray);
        jButtonConsultar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Buscar_1.png"))); // NOI18N
        jButtonConsultar.setText("Consultar");
        jButtonConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonConsultarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonConsultarMouseExited(evt);
            }
        });
        jButtonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarActionPerformed(evt);
            }
        });

        jTextNombre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextNombreKeyPressed(evt);
            }
        });

        jButtonHorario.setBackground(java.awt.Color.lightGray);
        jButtonHorario.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonHorario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Horario.png"))); // NOI18N
        jButtonHorario.setText("Horario");
        jButtonHorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonHorarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonHorarioMouseExited(evt);
            }
        });
        jButtonHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHorarioActionPerformed(evt);
            }
        });

        jButtonGenerarListas.setBackground(java.awt.Color.lightGray);
        jButtonGenerarListas.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonGenerarListas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Lista.png"))); // NOI18N
        jButtonGenerarListas.setText("<html>Generar listas</html>");
        jButtonGenerarListas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonGenerarListasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonGenerarListasMouseExited(evt);
            }
        });
        jButtonGenerarListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarListasActionPerformed(evt);
            }
        });

        jTableTalleresGrupos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Docente", "No_Usuario", "Grupo"
            }
        ));
        jScrollPane1.setViewportView(jTableTalleresGrupos);

        jButtonLimpiar.setBackground(java.awt.Color.lightGray);
        jButtonLimpiar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/limpiar.png"))); // NOI18N
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonLimpiarMouseExited(evt);
            }
        });
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonGenerarListas, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonConsultar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonLimpiar, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGenerarListas)
                    .addComponent(jButtonLimpiar))
                .addGap(42, 42, 42))
        );

        jButtonRegresar.setBackground(java.awt.Color.lightGray);
        jButtonRegresar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Atras.png"))); // NOI18N
        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonRegresarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonRegresarMouseExited(evt);
            }
        });
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        jButtonRegresarInicio.setBackground(java.awt.Color.lightGray);
        jButtonRegresarInicio.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonRegresarInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Atras.png"))); // NOI18N
        jButtonRegresarInicio.setText("Regresar al inicio");
        jButtonRegresarInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonRegresarInicioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonRegresarInicioMouseExited(evt);
            }
        });
        jButtonRegresarInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarInicioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Consulta un taller");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Imagenes/Talleres.png"))); // NOI18N

        jLabelnformacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Informacion.png"))); // NOI18N
        jLabelnformacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelnformacionMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonRegresarInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonRegresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(84, 84, 84))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(116, 116, 116)
                        .addComponent(jLabelnformacion)
                        .addGap(29, 29, 29))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabelnformacion))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRegresar)
                        .addGap(17, 17, 17)
                        .addComponent(jButtonRegresarInicio)
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConsultarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConsultarMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonConsultar.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonConsultarMouseEntered

    private void jButtonConsultarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConsultarMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonConsultar.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonConsultarMouseExited

    private void jButtonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarActionPerformed
        // TODO add your handling code here:
        // Muestra un cuadro de diálogo para confirmar si el usuario realmente desea
        int respuesta = JOptionPane.showConfirmDialog(null, "Realmente desea consultar este taller?",
            "Confirmar salida",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);
        if (respuesta == JOptionPane.YES_OPTION) {

             // Verifica que el nombre no esté vacío
            String nombreTaller = jTextNombre.getText(); 
            if (!nombreTaller.isEmpty()) {

            ConsultarTalleres consultar = new ConsultarTalleres();

            consultar.Consultar(nombreTaller, jTableTalleresGrupos);
            
            } else {
                JOptionPane.showMessageDialog(null, "Por favor ingrese el nombre del taller.");
                jTextNombre.requestFocus();
            }        
        } else {
            // Si el usuario elige "No", simplemente no hace nada o muestra otro mensaje
            JOptionPane.showMessageDialog(null, "Operación cancelada.");
        }
    }//GEN-LAST:event_jButtonConsultarActionPerformed

    private void jButtonRegresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonRegresar.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonRegresarMouseEntered

    private void jButtonRegresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonRegresar.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonRegresarMouseExited

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        // TODO add your handling code here:
        JFAdministrarTalleres JFAdministrarTalleres =new JFAdministrarTalleres(); // Crea una nueva instancia
        JFAdministrarTalleres.setVisible(true); // Muestra la ventana de inicio
        JFAdministrarTalleres.setLocationRelativeTo(null); // Centra la ventana en la pantalla
        this.setVisible(false); // Oculta la ventana actual.
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jButtonRegresarInicioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarInicioMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonRegresarInicio.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonRegresarInicioMouseEntered

    private void jButtonRegresarInicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarInicioMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonRegresarInicio.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonRegresarInicioMouseExited

    private void jButtonRegresarInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarInicioActionPerformed
        // TODO add your handling code here:
        JFMenuAdministrador JFMenuAdministrador =new JFMenuAdministrador(); // Crea una nueva instancia
        JFMenuAdministrador.setVisible(true); // Muestra la ventana de inicio
        JFMenuAdministrador.setLocationRelativeTo(null); // Centra la ventana en la pantalla
        this.setVisible(false); // Oculta la ventana actual.
    }//GEN-LAST:event_jButtonRegresarInicioActionPerformed

    private void jLabelnformacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelnformacionMouseClicked
        // TODO add your handling code here:
        // Este método se ejecuta cuando el usuario hace clic en el label de información.
        JOptionPane.showMessageDialog(null,"Escribe el nombre del taller que deseas consultar. "
                + "\nPuedes usar Enter para consultar el taller",
            "Información",
            JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelnformacionMouseClicked

    private void jButtonGenerarListasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGenerarListasMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonGenerarListas.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonGenerarListasMouseEntered

    private void jButtonGenerarListasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGenerarListasMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonGenerarListas.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonGenerarListasMouseExited

    private void jButtonHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHorarioActionPerformed
        // TODO add your handling code here:
        JFHorarios JFHorarios =new JFHorarios(); // Crea una nueva instancia
        JFHorarios.setVisible(true); // Muestra la ventana de inicio
        JFHorarios.setLocationRelativeTo(null); // Centra la ventana en la pantalla
        this.setVisible(false); // Oculta la ventana actual. 
    }//GEN-LAST:event_jButtonHorarioActionPerformed

    private void jButtonHorarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHorarioMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonHorario.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonHorarioMouseExited

    private void jButtonHorarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHorarioMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonHorario.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonHorarioMouseEntered

    private void jTextNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextNombreKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
             // Verifica que el nombre no esté vacío
            String nombreTaller = jTextNombre.getText(); 
            if (!nombreTaller.isEmpty()) {

            ConsultarTalleres consultar = new ConsultarTalleres();

            consultar.Consultar(nombreTaller, jTableTalleresGrupos);
            } else {
                    JOptionPane.showMessageDialog(null, "Por favor ingrese el nombre del taller.");
                    jTextNombre.requestFocus();
                }
        }
    }//GEN-LAST:event_jTextNombreKeyPressed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // TODO add your handling code here:
        // Limpiar campos
        jTextNombre.setText("");
        DefaultTableModel model = (DefaultTableModel) jTableTalleresGrupos.getModel();
        model.setRowCount(0);
        jTextNombre.requestFocus();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLimpiarMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonLimpiar.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonLimpiarMouseEntered

    private void jButtonLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLimpiarMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonLimpiar.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonLimpiarMouseExited

    private void jButtonGenerarListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarListasActionPerformed
        // TODO add your handling code here:
           String nombreTaller = jTextNombre.getText().trim();
                if (nombreTaller.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Por favor, ingresa el nombre del taller.");
                    jTextNombre.requestFocus();
                    return;
                }
                

                // Atributos de conexión
                String bd = "workshopadmin";
                String url = "jdbc:mysql://localhost:3306/" + bd;
                String user = "root";
                String password = "sqloracle";
                String driver = "com.mysql.cj.jdbc.Driver";

                java.sql.Connection cx = null;
                PreparedStatement ps = null;
                ResultSet rs = null;

                
                try {
                   
                  
                    // Cargar el controlador JDBC
                    Class.forName(driver);
                    cx = DriverManager.getConnection(url, user, password);

                    // Consulta SQL para obtener los alumnos inscritos en el taller solicitado
                    String sql =
                        "SELECT a.matricula, a.nombre, a.apellido, t.nombre AS taller, g.nombre AS grupo " +
                        "FROM alumnos a " +
                        "JOIN grupos g ON a.id_grupo = g.id_grupo " +                 // AQUI SE REALIZAN LAS CONSULTAS PARA OBTENER LOS DATOS DEL ALUMNO QUE PERTENEZCA AL TALLER SOLICITADO
                        "JOIN talleres t ON g.id_taller = t.id_taller " +
                        "WHERE t.nombre = ? AND a.activo = TRUE";

                    ps = cx.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); // Cambiar el tipo de ResultSet
                    ps.setString(1, nombreTaller);
                    rs = ps.executeQuery();

                    // Verificar si hay resultados antes de crear el archivo PDF
                    boolean hayResultados = false;
                    while (rs.next()) {
                        hayResultados = true;
                    }

                    if (!hayResultados) {
                        JOptionPane.showMessageDialog(null, "No se encontraron alumnos para ese taller.");
                        jTextNombre.setText("");
                        jTextNombre.requestFocus();
                        return; // Si no hay alumnos, no se genera el archivo PDF
                    }

                    // Si hay resultados, entonces crear el archivo PDF
                    Document document = new Document();
                    // Definir la ruta de la carpeta de descargas (esto puede variar dependiendo del sistema operativo)
                    String userHome = System.getProperty("user.home");
                    String downloadPath = userHome + "/Downloads/";
                    String filePath = downloadPath + "ListaAlumnos_" + nombreTaller + ".pdf"; // Crea el documento.
                    PdfWriter.getInstance(document, new FileOutputStream(filePath));
                    document.open();

                    document.add(new Paragraph("Lista de Alumnos del Taller: " + nombreTaller,
                            FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16)));    // Fuente
                    document.add(new Paragraph(" "));

                    PdfPTable table = new PdfPTable(4); // Matrícula, Nombre, Apellido
                    table.addCell("Matrícula");
                    table.addCell("Nombre");
                    table.addCell("Apellido");
                    table.addCell("Grupo");

                    // Mover el cursor a la primera fila
                    rs.beforeFirst();

                    // Si existen alumnos en el taller, se realiza la obtención de datos de la BD
                    while (rs.next()) {
                        table.addCell(String.valueOf(rs.getInt("matricula")));
                        table.addCell(rs.getString("nombre"));
                        table.addCell(rs.getString("apellido"));
                        table.addCell(rs.getString("grupo"));
                    }

                    document.add(table);
                    JOptionPane.showMessageDialog(null, "PDF generado exitosamente en la carpeta de descargas.");
                    document.close();

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error al generar PDF: " + e.getMessage());
                } finally {
                    try {
                        if (rs != null) rs.close();
                        if (ps != null) ps.close();
                        if (cx != null) cx.close();
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                }
    }//GEN-LAST:event_jButtonGenerarListasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFConsultarTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFConsultarTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFConsultarTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFConsultarTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFConsultarTaller().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JButton jButtonGenerarListas;
    private javax.swing.JButton jButtonHorario;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JButton jButtonRegresarInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelnformacion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTalleresGrupos;
    private javax.swing.JTextField jTextNombre;
    // End of variables declaration//GEN-END:variables
}
