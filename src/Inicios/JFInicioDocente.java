/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Inicios;

// Paquetes a utilizar
import Clases.Conexion; // Importa la clase conexion para gestionar la conexion con la base de datos
import Clases.TextPrompt; // Importa la clase TextPrompt para utilizar placeholders
import javax.swing.JOptionPane; // Permite mostrar cuadros de diálogo (mensajes, confirmaciones, entradas de texto, etc.).
import Docente.JFMenuDocente; // Importa la interfaz del menú del docente desde el paquete 'Docente'.
import java.awt.Color; // Permite usar la clase Color para cambiar colores en componentes gráficos.
import java.awt.Image; // Permite manejar imágenes, por ejemplo, para íconos o imágenes en la interfaz.
import java.awt.Toolkit; // Proporciona acceso a recursos del sistema como imágenes, sonidos, etc.
import java.awt.event.WindowAdapter; // Clase que se puede extender para manejar eventos de ventana sin implementar todos los métodos.
import java.awt.event.WindowEvent; // Representa un evento que ocurre en una ventana, como cerrar, abrir, minimizar, etc.
import java.sql.Connection; // Importa Connection, que representa la conexión activa con la base de datos.
import java.sql.DriverManager; // Importa DriverManager, que se usa para establecer conexiones con la base de datos.
import java.sql.PreparedStatement; // Importa PreparedStatement, que permite ejecutar consultas SQL seguras con parámetros.
import java.sql.ResultSet; // Importa ResultSet, que se utiliza para almacenar los resultados obtenidos de una consulta SQL.
import java.sql.SQLException; // Importa SQLException, que captura errores relacionados con la base de datos.
// Importa Logger y Level, herramientas para registrar mensajes en la consola o en archivos de log.
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author canto
 */
public class JFInicioDocente extends javax.swing.JFrame {

    /**
     * Creates new form JFInicio
     */
    
    // Datos de configuración para la conexión con la base de datos
    String bd="workshopadmin"; // Nombre de la base de datos a la que se desea conectar.
    String url="jdbc:mysql://localhost:3306/"; // URL de conexión para MySQL. Incluye el host (localhost) y el puerto (3306), pero no la base de datos todavía.
    String user="root"; // Usuario de la base de datos. En muchos entornos locales, "root" es el usuario por defecto.
    String password="sqloracle"; // Contraseña del usuario "root". Aquí se ha puesto "sqloracle", pero debe coincidir con la contraseña real en tu servidor MySQL.
    String driver="com.mysql.cj.jdbc.Driver"; // Nombre del driver JDBC que se utiliza para conectar a MySQL. Este driver debe estar incluido en el classpath del proyecto.
    Connection cx=null; // Objeto de conexión. Se utilizará para establecer la conexión con la base de datos.
    PreparedStatement ps=null; // Objeto que permite ejecutar sentencias SQL con parámetros (consultas preparadas)
    
    public JFInicioDocente() {
        initComponents(); // Método que configura y organiza todos los componentes gráficos en la ventana.
        cerrar(); // Llama al método cerrar(), que configura la acción al cerrar la ventana.
        setLocationRelativeTo(null); // Centra la ventana en la pantalla.
        jLabelOcultar.setVisible(false); // Oculta inicialmente el ícono o etiqueta para mostrar/ocultar contraseña (u otro propósito visual).
        TextPrompt usuario = new TextPrompt("12345678",jTextUsuario); // Establece un texto de sugerencia ("placeholder") en el campo de usuario.
        TextPrompt contrasenia = new TextPrompt("unodos12",jPasswordContrasenia); // Establece un texto de sugerencia en el campo de contraseña.
        setIconImage(getIconImage()); // Establece un ícono personalizado para la ventana.
    }
    
    //Icono del JFrame
    @Override // Indica que este método sobrescribe el método getIconImage() de la clase JFrame
    // Usa Toolkit (una clase de utilidades gráficas de AWT) para obtener una imagen ubicada en la ruta interna del proyecto
    // ClassLoader.getSystemResource() localiza el archivo dentro del classpath (dentro de src o el .jar).
    public Image getIconImage(){ 
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("workshopadmin/Imagenes/LogoIcono.png"));
        return retValue; // Devuelve la imagen para que sea usada como ícono del JFrame
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void cerrar(){
        try {
            // Evita que la ventana se cierre automáticamente al presionar la "X".
            this.setDefaultCloseOperation(JFInicioGeneral.DO_NOTHING_ON_CLOSE);
            // Añade un "escuchador" que detecta cuando se intenta cerrar la ventana.
            addWindowListener(new WindowAdapter(){
                public void windowClosing(WindowEvent e){
                    // Cuando se detecta el intento de cierre, se llama al método confirmarSalida().
                    confirmarSalida();
                }
              }
            );
            this.setVisible(true); // Hace visible la ventana (por si no se hizo antes).
        }
        catch (Exception e) { 
            e.printStackTrace(); // Si ocurre algún error, se imprime el error en consola.
    }
}
    
    public void confirmarSalida(){
        // Muestra un cuadro de diálogo de confirmación al usuario.
        int valor = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea cerrar la aplicación?", 
                "Advertencia", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.WARNING_MESSAGE);
        // Si el usuario hace clic en "Sí", el programa se cierra completamente.
        if (valor==JOptionPane.YES_OPTION){
            System.exit(0); // Termina la ejecución de la aplicación.
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextUsuario = new javax.swing.JTextField();
        jButtonIngresar = new javax.swing.JButton();
        jPasswordContrasenia = new javax.swing.JPasswordField();
        jLabelVer = new javax.swing.JLabel();
        jLabelOcultar = new javax.swing.JLabel();
        jButtonRegresar = new javax.swing.JButton();
        jLabelnformacion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio de sesión del docente");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Imagenes/Logo.jpg"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel4.setText("¡Bienvenido Docente!");

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Inicio de sesión");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 34, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Usuario.png"))); // NOI18N
        jLabel2.setText("No. Control");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 109, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Contraseña.png"))); // NOI18N
        jLabel3.setText("Contraseña");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 172, -1, -1));

        jTextUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel2.add(jTextUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 150, 30));

        jButtonIngresar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonIngresar.setText("Ingresar");
        jButtonIngresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonIngresarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonIngresarMouseExited(evt);
            }
        });
        jButtonIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngresarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, -1, -1));

        jPasswordContrasenia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel2.add(jPasswordContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 150, 30));

        jLabelVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Visible.png"))); // NOI18N
        jLabelVer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelVerMouseClicked(evt);
            }
        });
        jPanel2.add(jLabelVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 30, 30));

        jLabelOcultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/NoVisible.png"))); // NOI18N
        jLabelOcultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelOcultarMouseClicked(evt);
            }
        });
        jPanel2.add(jLabelOcultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 30, 30));

        jButtonRegresar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonRegresarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonRegresarMouseExited(evt);
            }
        });
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        jLabelnformacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshopadmin/Iconos/Informacion.png"))); // NOI18N
        jLabelnformacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelnformacionMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(36, 36, 36)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(81, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonRegresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelnformacion)
                        .addGap(33, 33, 33))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(89, 89, 89))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelnformacion)
                    .addComponent(jButtonRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngresarActionPerformed
        // TODO add your handling code here:
        // Verifica si el campo de texto del usuario está vacío
        if(jTextUsuario.getText().isEmpty()){
            // Muestra un mensaje de error si no se ha introducido el número de control
            JOptionPane.showMessageDialog(null,"Inserte su número de control",
            "Error",
            JOptionPane.ERROR_MESSAGE);
            jTextUsuario.requestFocus(); // Pone el foco en el campo de texto para que el usuario lo complete.
        } else {
            if(jPasswordContrasenia.getPassword().length == 0){ // Verifica si el campo de contraseña está vacío
                // Muestra un mensaje de error si no se ha introducido la contraseña
                JOptionPane.showMessageDialog(null,"Inserte su contraseña",
                "Error",
                JOptionPane.ERROR_MESSAGE);
                jPasswordContrasenia.requestFocus(); // Pone el foco en el campo de texto para que el usuario lo complete.
            }else{  
                try {
                    Class.forName(driver); // Carga el controlador JDBC para la conexión a la base de datos
                    cx=DriverManager.getConnection(url+bd,user, password);  // Establece la conexión con la base de datos usando la URL, usuario y contraseña configurados
                    // Prepara una consulta SQL para verificar si el usuario existe
                    PreparedStatement consulta;
                    consulta=cx.prepareStatement("SELECT no_usuario, contra_docente FROM docentes WHERE no_usuario = ?");
                    consulta.setString(1, jTextUsuario.getText()); // Establece el número de control en la consulta
                    ResultSet resultado = consulta.executeQuery(); // Ejecuta la consulta
                    String contraseniaReal = ""; // Variable para almacenar la contraseña real obtenida de la base de datos

                    // Si se encontró el usuario en la base de datos
                    if(resultado.next()){
                        contraseniaReal=resultado.getString("contra_docente"); // Recupera la contraseña real
                        String contraseniaCapturada = new String(jPasswordContrasenia.getPassword()); // Convierte la contraseña capturada a texto
                        
                        // Compara la contraseña ingresada con la almacenada en la base de dato
                        if (contraseniaReal.equals(contraseniaCapturada)){
                            // Si las contraseñas coinciden, se abre la siguiente ventana (menú del docente)
                            JFMenuDocente JFMenuDocente =new JFMenuDocente(); 
                            JFMenuDocente.setVisible(true); // Muestra la ventana del menú
                            JFMenuDocente.setLocationRelativeTo(null); // Centra la ventana en la pantalla
                            this.setVisible(false); // Oculta la ventana actual
                        } else {
                            // Si la contraseña es incorrecta, muestra un mensaje de error
                            JOptionPane.showMessageDialog(null,"Contraseña incorrecta",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                            }
                    } else {
                        // Si el usuario no existe en la base de datos, muestra un mensaje de error
                        JOptionPane.showMessageDialog(null,"Usuario incorrecto",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                            }
                } catch(ClassNotFoundException | SQLException ex){
                    // En caso de un error al conectar con la base de datos, muestra el error
                    JOptionPane.showMessageDialog(null, "No se conectó a la BD" + ex.getMessage());
                    Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
                } 
           }
        }
    }//GEN-LAST:event_jButtonIngresarActionPerformed

    private void jLabelVerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelVerMouseClicked
        // TODO add your handling code here:
        // Este método se ejecuta cuando el usuario hace clic en el label para ver la contraseña.
        jLabelVer.setVisible(false); // Oculta el label de "ver" la contraseña.
        jLabelOcultar.setVisible(true); // Muestra el label de "ocultar" la contraseña.
        jPasswordContrasenia.setEchoChar((char)0); // Establece que los caracteres de la contraseña sean visibles (sin máscara).
    }//GEN-LAST:event_jLabelVerMouseClicked

    private void jLabelOcultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelOcultarMouseClicked
        // TODO add your handling code here:
        // Este método se ejecuta cuando el usuario hace clic en el label para ocultar la contraseña.
        jLabelVer.setVisible(true); // Muestra el label para "ver" la contraseña.
        jLabelOcultar.setVisible(false); // Oculta el label para "ocultar" la contraseña.
        jPasswordContrasenia.setEchoChar(('*')); // Restaura el caracter de máscara ('*') para ocultar la contraseña.
    }//GEN-LAST:event_jLabelOcultarMouseClicked

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        // TODO add your handling code here:
        // Este método se ejecuta cuando el usuario hace clic en el botón "Regresar".
        JFInicioGeneral JFUsuarios =new JFInicioGeneral(); // Crea una nueva instancia de la ventana de inicio.
        JFUsuarios.setVisible(true); // Muestra la ventana de inicio.
        JFUsuarios.setLocationRelativeTo(null); // Centra la ventana en la pantalla
        this.setVisible(false); // Oculta la ventana actual.
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jLabelnformacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelnformacionMouseClicked
        // TODO add your handling code here:
        // Este método se ejecuta cuando el usuario hace clic en el label de información.
        JOptionPane.showMessageDialog(null,"Ingresa tu nombre de usuario y contraseña tal como te los proporcionaron"
                + "\nSi olvidaste o tienes problemas, contacta al administrador.",
                "Información",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelnformacionMouseClicked

    private void jButtonRegresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarMouseEntered
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonRegresar.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonRegresarMouseEntered

    private void jButtonRegresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegresarMouseExited
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonRegresar.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonRegresarMouseExited

    private void jButtonIngresarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonIngresarMouseExited
        // TODO add your handling code here:
        // Cambia el fondo del botón a verde cuando el mouse pasa por encima.
        jButtonIngresar.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_jButtonIngresarMouseExited

    private void jButtonIngresarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonIngresarMouseEntered
        // TODO add your handling code here:
        // Restaura el fondo del botón a gris claro cuando el mouse sale.
        jButtonIngresar.setBackground(Color.GREEN);
    }//GEN-LAST:event_jButtonIngresarMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFInicioDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFInicioDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFInicioDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFInicioDocente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFInicioDocente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIngresar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelOcultar;
    private javax.swing.JLabel jLabelVer;
    private javax.swing.JLabel jLabelnformacion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordContrasenia;
    private javax.swing.JTextField jTextUsuario;
    // End of variables declaration//GEN-END:variables
}
